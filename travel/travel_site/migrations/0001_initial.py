# Generated by Django 4.2.4 on 2024-04-24 15:33

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_ckeditor_5.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(max_length=12, unique=True, verbose_name='Номер телефона')),
                ('email', models.EmailField(max_length=80, unique=True, verbose_name='Почта')),
                ('date_birth', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=55, verbose_name='Название блога')),
                ('slug', models.SlugField(max_length=75, unique=True, verbose_name='Слаг блога')),
                ('short_description', models.TextField(max_length=250, verbose_name='Краткое описание блога')),
                ('image', models.ImageField(upload_to='images/%Y/%m/%d', verbose_name='Изображение блога')),
                ('description', django_ckeditor_5.fields.CKEditor5Field(verbose_name='Описание блога')),
                ('author', models.CharField(max_length=50, verbose_name='Имя и фамилия автора')),
                ('role', models.CharField(blank=True, help_text='Например: Путешественник', max_length=30, verbose_name='Занятие по жизни автора')),
                ('experience', models.CharField(blank=True, help_text='Например: Опыт в горах 8 лет или что-то такое', max_length=30, verbose_name='Опыт автора')),
                ('telegram', models.CharField(blank=True, default='https://t.me/', max_length=70, verbose_name='Ссылка на телеграм')),
                ('vkontakte', models.CharField(blank=True, default='https://vk.com/', max_length=70, verbose_name='Ссылка на ВК')),
                ('created_at', models.DateField(default=django.utils.timezone.now, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Блог',
                'verbose_name_plural': 'Блоги',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=40, verbose_name='Название отзыва')),
                ('description', models.TextField(max_length=600, verbose_name='Описание отзыва')),
                ('is_displayed', models.BooleanField(default=True, verbose_name='Отображается ли отзыв')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, verbose_name='Название локации')),
                ('slug', models.SlugField(max_length=40, unique=True, verbose_name='Слаг локации')),
                ('short_description', models.CharField(max_length=110, verbose_name='Краткое описание')),
                ('image', models.ImageField(help_text='Маленькая картинка,когда не открыл еще страницу с локацией', upload_to='images/%Y/%m/%d', verbose_name='Изображение локации')),
                ('left_description', django_ckeditor_5.fields.CKEditor5Field(verbose_name='Описание левой части')),
                ('right_description', django_ckeditor_5.fields.CKEditor5Field(verbose_name='Описание правой части')),
                ('left_image', models.ImageField(upload_to='images/%Y/%m/%d', verbose_name='Изображение для левой части')),
                ('right_image', models.ImageField(upload_to='images/%Y/%m/%d', verbose_name='Изображение для правой части')),
            ],
            options={
                'verbose_name': 'Локация',
                'verbose_name_plural': 'Локации',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Имя участника')),
                ('surname', models.CharField(max_length=30, verbose_name='Фамилия участника')),
                ('role', models.CharField(blank=True, help_text='Например: Путешественник', max_length=30, verbose_name='Должность участника')),
                ('experience', models.CharField(blank=True, help_text='Например: Опыт в горах 8 лет или что-то такое', max_length=30, verbose_name='Опыт участника')),
                ('description', models.TextField(max_length=1500, verbose_name='О гиде')),
                ('image', models.ImageField(upload_to='images/%Y/%m/%d', verbose_name='Фото')),
            ],
            options={
                'verbose_name': 'Гид',
                'verbose_name_plural': 'Гиды',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProductRent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, verbose_name='Название продукта')),
                ('short_description', models.CharField(max_length=50, verbose_name='Краткое описание продукта')),
                ('image', models.ImageField(upload_to='images/%Y/%m/%d', verbose_name='Изображение продукта')),
                ('price', models.PositiveIntegerField(verbose_name='Цена продукта')),
                ('light', models.BooleanField(default=False, verbose_name='Этот продукт входит в набор light')),
            ],
            options={
                'verbose_name': 'Продукт в прокат',
                'verbose_name_plural': 'Продукты в прокат',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, verbose_name='Вопрос')),
                ('description', models.TextField(max_length=1000, verbose_name='Описание вопроса')),
                ('is_displayed', models.BooleanField(default=True, verbose_name='Отображается ли вопрос')),
            ],
            options={
                'verbose_name': 'Вопрос',
                'verbose_name_plural': 'Вопросы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Slide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, verbose_name='Название слайда')),
                ('image', models.ImageField(upload_to='images/%Y/%m/%d', verbose_name='Изображение слайда')),
                ('is_displayed', models.BooleanField(default=True, verbose_name='Отображается ли слайд')),
            ],
            options={
                'verbose_name': "Слайд на странице 'Я еду с группой'",
                'verbose_name_plural': "Слайды на странице 'Я еду с группой'",
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Tour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, verbose_name='Название тура')),
                ('slug', models.SlugField(max_length=40, unique=True, verbose_name='Слаг тура')),
                ('start_date', models.DateField(default=django.utils.timezone.now, verbose_name='Дата начала тура')),
                ('complexity', models.CharField(choices=[('Легкая', 'Легкая'), ('Средняя', 'Средняя'), ('Высокая', 'Высокая')], default='Высокая', max_length=15, verbose_name='Сложность тура')),
                ('quantity', models.PositiveSmallIntegerField(verbose_name='Количество человек в туре')),
                ('available_seats', models.CharField(default=models.PositiveSmallIntegerField(verbose_name='Количество человек в туре'), max_length=15, verbose_name='Количество свободных мест')),
                ('price', models.PositiveIntegerField(verbose_name='Цена тура')),
                ('type_tour', models.CharField(choices=[('Поход', 'Поход'), ('Экскурсия', 'Экскурсия')], default='Поход', max_length=15, verbose_name='Тип тура')),
                ('short_description', models.CharField(max_length=100, verbose_name='Краткое описание')),
                ('description', django_ckeditor_5.fields.CKEditor5Field(verbose_name='Описание тура')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel_site.location', verbose_name='Локация для тура')),
            ],
            options={
                'verbose_name': 'Тур',
                'verbose_name_plural': 'Туры',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, verbose_name='Название тега')),
                ('location', models.ManyToManyField(to='travel_site.location', verbose_name='Локация для тега')),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=12, verbose_name='Номер телефона')),
                ('email', models.EmailField(blank=True, max_length=80, verbose_name='Почта')),
                ('date_birth', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('name', models.CharField(blank=True, max_length=60, verbose_name='Имя фамилия')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата проведения заказа')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'Создан'), (1, 'Оплачено')], default=0, verbose_name='Статус заказа:')),
                ('cart', models.JSONField(default=dict, verbose_name='Товары добавленные в заказ')),
                ('price', models.CharField(default=0, max_length=20, verbose_name='Цена заказа(цена корзины)')),
                ('products', models.TextField(default='', max_length=1000, verbose_name='Продукты')),
                ('user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь:')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='Day',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_day', models.PositiveSmallIntegerField(verbose_name='Номер дня')),
                ('description', models.TextField(max_length=250, verbose_name='Описание')),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tour_day', to='travel_site.tour', verbose_name='Тур')),
            ],
            options={
                'verbose_name': 'День',
                'verbose_name_plural': 'Дни',
            },
        ),
    ]
